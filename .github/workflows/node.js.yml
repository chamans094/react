name: React Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      
    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: self-hosted
       
        strategy:
          matrix:
            node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
        - uses: actions/checkout@v3
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
             node-version: ${{ matrix.node-version }}
             cache: 'npm'
        - run: npm ci
        - run: npm run build --if-present
    # docker:
    #     name: Containerization
    #     needs: [unit-testing]
    #     runs-on: self-hosted
    #     steps:
    #       - name: Checkout Repo
    #         uses: actions/checkout@v4
    #       - name: DockerHub Login
    #         uses: docker/login-action@v2
    #         with:
    #            username: ${{vars.DOCKERHUB_USERNAME}}
    #            password: ${{secrets.DOCKERHUB_PASSWORD}}
          
    #       - name: Set up Docker Buildx
    #         uses: docker/setup-buildx-action@v2
            
       
    #       - name: Build and push
    #         uses: docker/build-push-action@v6
    #         with:
    #           context: .
    #           tags: ${{ vars.DOCKERHUB_USERNAME }}/react:${{ github.sha }}
    #           push: false
               

    #       - name: Docker images testing
    #         run: |
    #             docker images
    #             docker run --name react -d -p 3002:3002 ${{ vars.DOCKERHUB_USERNAME }}/react:${{ github.sha }} .
      
    #       - name: Verify container is running
    #         run: |
    #             docker ps
    # #             docker logs react

    #       - name: Build and push
    #         uses: docker/build-push-action@v6
    #         with:
    #            context: .
    #            push: true
    #            tags: ${{ vars.DOCKERHUB_USERNAME }}/react:${{ github.sha }}
    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v4
        - name: Install kubectl CLI
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.26.0'
        - name: Fetch kubernetes details
          run:
            kubectl version --short

            kubectl get nodes