name: React Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      
    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: self-hosted
       
        strategy:
          matrix:
            node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
        - uses: actions/checkout@v3
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
             node-version: ${{ matrix.node-version }}
             cache: 'npm'
        - run: npm ci
        - run: npm run build --if-present
    docker:
        name: Containerization
        needs: [unit-testing]
        permissions:
          packages: write
        runs-on: self-hosted
        steps:
          - name: Checkout Repo
            uses: actions/checkout@v4
          - name: DockerHub Login
            uses: docker/login-action@v2
            with:
               username: ${{vars.DOCKERHUB_USERNAME}}
               password: ${{secrets.DOCKERHUB_PASSWORD}}

          - name: GHCR Login
            uses: docker/login-action@v2
            with:
              registry: ghcr.io
              username: ${{github.repository_owner}}
              password: ${{secrets.GITHUB_TOKEN}}

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2
            
       
          - name: Build and push
            uses: docker/build-push-action@v6
            with:
              context: .
              tags: ${{ vars.DOCKERHUB_USERNAME }}/react:${{ github.sha }}
              push: true
               

          - name: Docker images testing
            run: |
              # Remove existing container if it exists

              if [ "$(docker ps -aq -f name=react)" ]; then
              docker stop react || true
              docker rm react || true
              fi
      
              # Pull and run the new image
              
              docker pull ${{ vars.DOCKERHUB_USERNAME }}/react:${{ github.sha }}
              docker run --name react -d -p 3002:3002 ${{ vars.DOCKERHUB_USERNAME }}/react:${{ github.sha }}
          
          - name: Verify container is running
            run: |
                docker ps
                docker logs react

          - name: Container Registry Push
            uses: docker/build-push-action@v6
            with:
               context: .
               push: true
               tags: |
                ${{ vars.DOCKERHUB_USERNAME }}/react:${{ github.sha }}
                ghcr.io/${{github.repository_owner}}/react:${{ github.sha }}
    dev-deploy:
      needs: docker
      runs-on: self-hosted
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v4
           
        - name: Install kubectl CLI
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.30.2'

        - name: set kubeconfig file
          uses: azure/k8s-set-context@v3
          with: 
            method: kubeconfig
            kubeconfig: ${{secrets.KUBECONFIG}}

        - name: Fetch kubernetes cluster details
          run:
            kubectl version --client

            kubectl get nodes
        - name: Nginx ingress IP
          run: |
           echo "INGRESS_IP= $(kubectl -n ingress-nginx get services my-ingress-nginx-controller | grep 'my-ingress-nginx-controller' | awk '{print $4}')" >> $GITHUB_ENV

        - name: Replace token in manifest files    
          uses: cschleiden/replace-tokens@v1
          with:
              tokenPrefix: '_{_'
              tokenSuffix: '_}_'
              files: '["kubernetes/development/*.yaml"]'
          env:
              NAMESPACE: ${{vars.NAMESPACE}}
              REPLICAS: ${{vars.REPLICAS}}
              IMAGE: ${{vars.DOCKERHUB_USERNAME}}/react:${{github.sha}}
              INGRESS_IP: ${{env.INGRESS_IP}}

        - name: check files
          run: |
           cat kubernetes/development/*.yaml
        - name: deploy to dev env
          run: | 
           kubectl apply -f kubernetes/development
